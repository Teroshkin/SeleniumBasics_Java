

"ЛЕКСИЧЕСКАЯ СТРУКТУРА JAVA"


Java чувствительна к регистру символов. "Идентификаторы" Demo, demo, DEMO не будут считаться одним и тем же

                                    "ЛЕКСИЧЕЧЕСКИЕ составляющие программы JAVA"
    "Незначащие символы"                       "ЛЕКСЕМЫ"(Ниже лексемы)                            "Комментарии"

                     "Идентификаторы" "Ключевые слова"  "Литералы" "Разделители"  "Операторы"


"Незначащие символы" : пробелы, табуляция, ограничители строк
"Комментарии": однострочные "//", блочные "/*...*/", комментарии документации "/** документация*/"

"Лексемы" - элементарные конструкции языка, которые компилятор javac генерирует в исполняемый байт код, выполняемый JVM
Виды "Лексем":
    1. "Идентификаторы" - может выступать имя класса, метода, параметра и переменной. Должен начинася с буквы, символа подчеркивания, или
        валютный символ Юникод. Не могут начинатся с цифры. Могут содержать подчеркивание. Примеры: noob, Noob, noobBalance, NoobBalance, Noob3 итд
        Нельзя использовать в java зарезервированные "ключевые слова" (public,class,void, static итд) и "литералы" (true, false, null).
    2. "Ключевые слова" -  около 50 ключевых слов в JAVA. Их нельзя использовать ни для обознач. имен переменных, классов и методов.
        Напр.: public,class,void, static
    3. "Литералы":
            3.1 'Целочисленный' (int)
            3.2 'Вещественный' (float,double) -
            3.3  'Логический(boolean)' - true, false
            3.4. 'Символьный' (charaster) -может содержать один символ из набора Unicode, заключенный в одинарные кавычки,
            специальную последовательность (управляющие символы) начинающуюся со знака косой черты – \
            3.5. 'Cтроковый' (String)
            3.6. 'null-literal'
    4. "Разделители" - спец. символы, которые используются в служебных целях языка. (), {}, [], ...@ ::, ; , .
    5. "Операторы" - используются в различных операциях: арифметических, логических, битовых, сравнения и присваивания. Их достаточно много
        Примеры: = - * / ==  < <= => > итд
